"""volunteer profile fields + availability

Revision ID: b4cbe98e90d9
Revises: 0b25e8fda1c7
Create Date: 2025-07-17 13:51:34.807023

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'b4cbe98e90d9'
down_revision = '0b25e8fda1c7'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user_availability',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('available_date', sa.Date(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user_profiles.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('user_id', 'available_date')
    )
    op.drop_table('user_to_availability')
    with op.batch_alter_table('user_profiles', schema=None) as batch_op:
        batch_op.alter_column('full_name',
               existing_type=sa.VARCHAR(length=120),
               type_=sa.String(length=50),
               existing_nullable=False)
        batch_op.alter_column('preferences',
               existing_type=sa.VARCHAR(length=512),
               type_=sa.Text(),
               existing_nullable=True)
        batch_op.drop_constraint(batch_op.f('user_profiles_user_id_fkey'), type_='foreignkey')
        batch_op.drop_constraint(batch_op.f('user_profiles_state_id_fkey'), type_='foreignkey')
        batch_op.create_foreign_key(None, 'states', ['state_id'], ['state_id'], ondelete='RESTRICT')
        batch_op.create_foreign_key(None, 'user_credentials', ['user_id'], ['user_id'], ondelete='CASCADE')

    with op.batch_alter_table('user_to_skill', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('user_to_skill_user_id_fkey'), type_='foreignkey')
        batch_op.drop_constraint(batch_op.f('user_to_skill_skill_id_fkey'), type_='foreignkey')
        batch_op.create_foreign_key(None, 'user_credentials', ['user_id'], ['user_id'], ondelete='CASCADE')
        batch_op.create_foreign_key(None, 'skills', ['skill_id'], ['skill_id'], ondelete='CASCADE')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user_to_skill', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(batch_op.f('user_to_skill_skill_id_fkey'), 'skills', ['skill_id'], ['skill_id'])
        batch_op.create_foreign_key(batch_op.f('user_to_skill_user_id_fkey'), 'user_credentials', ['user_id'], ['user_id'])

    with op.batch_alter_table('user_profiles', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(batch_op.f('user_profiles_state_id_fkey'), 'states', ['state_id'], ['state_id'])
        batch_op.create_foreign_key(batch_op.f('user_profiles_user_id_fkey'), 'user_credentials', ['user_id'], ['user_id'])
        batch_op.alter_column('preferences',
               existing_type=sa.Text(),
               type_=sa.VARCHAR(length=512),
               existing_nullable=True)
        batch_op.alter_column('full_name',
               existing_type=sa.String(length=50),
               type_=sa.VARCHAR(length=120),
               existing_nullable=False)

    op.create_table('user_to_availability',
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('availability_date', sa.DATE(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user_credentials.user_id'], name=op.f('user_to_availability_user_id_fkey')),
    sa.PrimaryKeyConstraint('user_id', 'availability_date', name=op.f('user_to_availability_pkey'))
    )
    op.drop_table('user_availability')
    # ### end Alembic commands ###
