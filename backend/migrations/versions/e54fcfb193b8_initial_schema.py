"""initial schema

Revision ID: e54fcfb193b8
Revises: 
Create Date: 2025-07-17 15:08:20.262801

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'e54fcfb193b8'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('skills',
    sa.Column('skill_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('skill_name', sa.String(length=50), nullable=False),
    sa.Column('level', sa.Enum('BEGINNER', 'INTERMEDIATE', 'EXPERT', name='skilllevelenum'), nullable=False),
    sa.PrimaryKeyConstraint('skill_id')
    )
    op.create_table('states',
    sa.Column('state_id', sa.String(length=2), nullable=False),
    sa.Column('name', sa.String(length=13), nullable=False),
    sa.PrimaryKeyConstraint('state_id')
    )
    op.create_table('user_credentials',
    sa.Column('user_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('role', sa.Enum('VOLUNTEER', 'ADMIN_PENDING', 'ADMIN', name='user_roles'), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('password_hash', sa.String(length=255), nullable=False),
    sa.Column('email_confirmed_at', sa.DateTime(), nullable=True),
    sa.Column('confirmation_token_version', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('user_id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('events',
    sa.Column('event_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.String(length=512), nullable=False),
    sa.Column('address', sa.String(length=100), nullable=True),
    sa.Column('city', sa.String(length=100), nullable=True),
    sa.Column('state_id', sa.String(length=2), nullable=False),
    sa.Column('zipcode', sa.String(length=9), nullable=True),
    sa.Column('urgency', sa.Enum('low', 'medium', 'high', name='urgencyenum'), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['state_id'], ['states.state_id'], ),
    sa.PrimaryKeyConstraint('event_id')
    )
    op.create_table('user_profiles',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('full_name', sa.String(length=50), nullable=False),
    sa.Column('address1', sa.String(length=100), nullable=False),
    sa.Column('address2', sa.String(length=100), nullable=True),
    sa.Column('city', sa.String(length=100), nullable=False),
    sa.Column('state_id', sa.String(length=2), nullable=False),
    sa.Column('zipcode', sa.String(length=9), nullable=False),
    sa.Column('preferences', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['state_id'], ['states.state_id'], ondelete='RESTRICT'),
    sa.ForeignKeyConstraint(['user_id'], ['user_credentials.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('user_id')
    )
    op.create_table('user_to_skill',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('skill_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['skill_id'], ['skills.skill_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['user_credentials.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('user_id', 'skill_id')
    )
    op.create_table('event_to_skill',
    sa.Column('event_id', sa.Integer(), nullable=False),
    sa.Column('skill_code', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['event_id'], ['events.event_id'], ),
    sa.ForeignKeyConstraint(['skill_code'], ['skills.skill_id'], ),
    sa.PrimaryKeyConstraint('event_id', 'skill_code')
    )
    op.create_table('user_availability',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('available_date', sa.Date(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user_profiles.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('user_id', 'available_date')
    )
    op.create_table('volunteer_history',
    sa.Column('vol_history_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('event_id', sa.Integer(), nullable=False),
    sa.Column('participation_status', sa.Enum('ASSIGNED', 'REGISTERED', 'ATTENDED', 'CANCELLED', 'NO_SHOW', name='participationstatusenum'), nullable=False),
    sa.Column('hours_volunteered', sa.Numeric(precision=4, scale=2), nullable=True),
    sa.ForeignKeyConstraint(['event_id'], ['events.event_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user_credentials.user_id'], ),
    sa.PrimaryKeyConstraint('vol_history_id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('volunteer_history')
    op.drop_table('user_availability')
    op.drop_table('event_to_skill')
    op.drop_table('user_to_skill')
    op.drop_table('user_profiles')
    op.drop_table('events')
    op.drop_table('user_credentials')
    op.drop_table('states')
    op.drop_table('skills')
    # ### end Alembic commands ###
